### YamlMime:Tutorial
title: <span data-ttu-id="1f359-101">Interpolation de chaîne en C#</span><span class="sxs-lookup"><span data-stu-id="1f359-101">String interpolation in C#</span></span>
metadata:
  title: Tutoriel interactif sur l’interpolation de chaîne - Guides de démarrage rapide en C#
  description: Dans ce tutoriel, vous allez explorer la fonctionnalité d’interpolation de chaîne en C# de manière interactive à l’aide de votre navigateur. Vous allez écrire un code C# et afficher les résultats de la compilation et de l’exécution du code directement dans le navigateur.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  ms.topic: quickstart
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection.yml
  nextTutorialTitle: <span data-ttu-id="1f359-105">Collections en C#</span><span class="sxs-lookup"><span data-stu-id="1f359-105">Collections in C#</span></span>
  ms.openlocfilehash: 07928406c9518990761ec9856eee713cb2b40ef7
  ms.sourcegitcommit: 2eceb05f1a5bb261291a1f6a91c5153727ac1c19
  ms.translationtype: HT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 09/04/2018
  ms.locfileid: "43506457"
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="1f359-106">Ce guide de démarrage rapide explique comment utiliser l’[interpolation de chaîne](../language-reference/tokens/interpolated.md) pour insérer des valeurs dans une chaîne unique.</span><span class="sxs-lookup"><span data-stu-id="1f359-106">This quickstart teaches you how to use [string interpolation](../language-reference/tokens/interpolated.md) to insert values into a single string.</span></span> <span data-ttu-id="1f359-107">Vous y apprendrez également comment contrôler les représentations textuelles de ces valeurs dans la chaîne de résultat.</span><span class="sxs-lookup"><span data-stu-id="1f359-107">You also learn how to control text representations of those values in the result string.</span></span> <span data-ttu-id="1f359-108">En utilisant votre navigateur pour écrire et exécuter du code C#, vous voyez instantanément les résultats.</span><span class="sxs-lookup"><span data-stu-id="1f359-108">You use your browser to write and run C# code and can immediately see the produced results.</span></span>
- title: <span data-ttu-id="1f359-109">Créer une chaîne interpolée</span><span class="sxs-lookup"><span data-stu-id="1f359-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"1f359-110\">Exécutez le code suivant dans la fenêtre interactive.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"1f359-111\">Pour cela, tapez le code dans la fenêtre interactive (remplacez `<name>` par votre nom) et sélectionnez **Exécuter** :</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-111\">To do that, type the code in the interactive window (replace `<name>` with your name) and select **Run**:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"1f359-112\">Quand vous exécutez le code, la fenêtre **Sortie** affiche une chaîne qui inclut votre nom dans le message d’accueil.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-112\">When you run the code, **Output** displays a string that includes your name in the greeting.</span></span> <span data-ttu-id=\"1f359-113\">L’argument chaîne dans l’appel de la méthode <xref:System.Console.WriteLine%2A> est une *chaîne interpolée*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-113\">The string argument of the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"1f359-114\">C’est un genre de modèle qui vous permet de construire une chaîne unique (appelée *chaîne de résultat*) à partir d’une chaîne qui comprend du code incorporé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"1f359-115\">Les chaînes interpolées sont particulièrement utiles pour insérer des valeurs dans une chaîne ou pour concaténer (joindre) plusieurs chaînes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) several strings.</span></span> \n\n<span data-ttu-id=\"1f359-116\">L’exemple ci-dessus contient les deux éléments que chaque chaîne interpolée doit avoir :</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-116\">The example above contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"1f359-117\">Un littéral de chaîne qui commence par le caractère `$` avant ses guillemets ouvrants.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"1f359-118\">Il ne peut pas y avoir d’espace entre le symbole `$` et les guillemets.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"1f359-119\">(Si vous voulez voir ce qui se passe si vous en incluez un, insérez un espace après le caractère `$` dans la fenêtre interactive et exécutez le code modifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and run the updated code.</span></span> <span data-ttu-id=\"1f359-120\">Le compilateur C# affiche un message d’erreur : « Caractère inattendu '$' ».)</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"1f359-121\">Une ou plusieurs *expressions interpolées*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"1f359-122\">Une expression interpolée est indiquée par des accolades ouvrantes et fermantes (`{` et `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"1f359-123\">Vous pouvez placer n’importe quelle expression C# qui retourne une valeur (notamment `null`) à l’intérieur des accolades.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"1f359-124\">Essayons quelques autres exemples d’interpolation de chaîne avec d’autres types de données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-124\">Let's try a few more string interpolation examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1f359-125\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1f359-126\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1f359-127">Inclure différents types de données</span><span class="sxs-lookup"><span data-stu-id="1f359-127">Include different data types</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"1f359-128\">À l’étape précédente, vous avez utilisé l’interpolation de chaîne pour insérer une chaîne à l’intérieur d’une autre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-128\">In the previous step, you used string interpolation to insert one string inside of another.</span></span> <span data-ttu-id=\"1f359-129\">Le résultat d’une expression interpolée peut toutefois être de n’importe quel type de données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-129\">The result of an interpolated expression can be of any data type, though.</span></span> <span data-ttu-id=\"1f359-130\">Nous allons insérer des valeurs de différents types de données dans une chaîne interpolée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-130\">Let's include values of various data types in an interpolated string.</span></span> \n\n<span data-ttu-id=\"1f359-131\">Dans l’exemple suivant, nous commençons par définir une [classe](../programming-guide/classes-and-structs/classes.md) `Vegetable` comme type de données avec la [propriété](../properties.md) `Name` et la [méthode](../methods.md) `ToString`, qui [remplace](../language-reference/keywords/override.md) le comportement de la méthode <xref:System.Object.ToString?displayProperty=nameWithType>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-131\">In the following example, first, we define a [class](../programming-guide/classes-and-structs/classes.md) data type `Vegetable` that has the `Name` [property](../properties.md) and the `ToString` [method](../methods.md), which [overrides](../language-reference/keywords/override.md) the behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id=\"1f359-132\">Le [modificateur d’accès `public`](../language-reference/keywords/public.md) permet à n’importe quel code client d’obtenir la représentation sous forme de chaîne d’une instance de `Vegetable`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-132\">The [`public` access modifier](../language-reference/keywords/public.md) makes that method available to any client code to get the string representation of a `Vegetable` instance.</span></span> <span data-ttu-id=\"1f359-133\">Dans l’exemple, la méthode `Vegetable.ToString` retourne la valeur de la propriété `Name` qui est initialisée sur le [constructeur](../programming-guide/classes-and-structs/constructors.md) `Vegetable` : `Vegetable(string name) => Name = name;`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-133\">In the example the `Vegetable.ToString` method returns the value of the `Name` property that is initialized at the `Vegetable` [constructor](../programming-guide/classes-and-structs/constructors.md): `Vegetable(string name) => Name = name;`.</span></span> <span data-ttu-id=\"1f359-134\">Ensuite, nous créons une instance de la classe `Vegetable` en utilisant le [mot clé `new`](../language-reference/keywords/new-operator.md) et en ajoutant un paramètre name pour le constructeur `Vegetable`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-134\">Then we create an instance of the `Vegetable` class by using [`new` keyword](../language-reference/keywords/new-operator.md) and providing a name parameter for the constructor `Vegetable`.</span></span> <span data-ttu-id=\"1f359-135\">Enfin, nous incluons cette instance dans une chaîne interpolée qui contient également une valeur <xref:System.DateTime>, une valeur <xref:System.Decimal> et une valeur d’[énumération](../programming-guide/enumeration-types.md) `Unit`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-135\">Finally, we include that instance into an interpolated string that also contains a <xref:System.DateTime> value, a <xref:System.Decimal> value, and a `Unit` [enumeration](../programming-guide/enumeration-types.md) value.</span></span> <span data-ttu-id=\"1f359-136\">Exécutez le code suivant dans la fenêtre interactive :</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-136\">Run the following code in the interactive window:</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic enum Unit { item, kilogram, gram, dozen };\n\nvar item = new Vegetable(\"eggplant\");\nvar date = DateTime.Now;\nvar price = 1.99m;\nvar unit = Unit.item;\nConsole.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n```\n\n<span data-ttu-id=\"1f359-137\">Notez que l’expression interpolée `item` dans la chaîne interpolée correspond au texte « eggplant » (aubergines) dans la chaîne de résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-137\">Note that the interpolated expression `item` in the interpolated string resolves to the text \"eggplant\" in the result string.</span></span> <span data-ttu-id=\"1f359-138\">En effet, lorsque le résultat de l’expression n’est pas de type chaîne, il est résolu en une chaîne de la façon suivante :</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-138\">That's because, when the type of the expression result is not a string, the result is resolved to a string in the following way:</span></span>\n\n- <span data-ttu-id=\"1f359-139\">Si l’expression interpolée a la valeur `null`, une chaîne vide («» ou <xref:System.String.Empty?displayProperty=nameWithType>) est utilisée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-139\">If the interpolated expression evaluates to `null`, an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>) is used.</span></span>\n\n- <span data-ttu-id=\"1f359-140\">Si l’expression interpolée n’a pas la valeur `null`, en général, la méthode `ToString` du type du résultat est appelée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-140\">If the interpolated expression doesn't evaluate to `null`, typically the `ToString` method of the result type is called.</span></span> <span data-ttu-id=\"1f359-141\">Vous pouvez tester cela en mettant à jour l’implémentation de la méthode `Vegetable.ToString`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-141\">You can test this by updating the implementation of the `Vegetable.ToString` method.</span></span> <span data-ttu-id=\"1f359-142\">Il n’est peut-être même pas nécessaire d’implémenter la méthode `ToString` étant donné que chaque type a déjà une implémentation de cette méthode.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-142\">You might not even need to implement the `ToString` method since every type has some implementation of this method.</span></span> <span data-ttu-id=\"1f359-143\">Pour tester cela, commentez la définition de la méthode `Vegetable.ToString` dans l’exemple (en la faisant précéder d’un symbole de commentaire `//`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-143\">To test this, comment out the definition of the `Vegetable.ToString` method in the example (to do that, put a comment symbol, `//`, in front of it).</span></span> <span data-ttu-id=\"1f359-144\">Dans la sortie, la chaîne « eggplant » est remplacée par le nom de type qualifié complet (l’espace de noms défini par la boucle REPL C#, plus le nom de type), ce qui est le comportement par défaut de la méthode <xref:System.Object.ToString?displayProperty=nameWithType>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-144\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id=\"1f359-145\">Le comportement par défaut de la méthode `ToString` pour une valeur d’énumération est de retourner la représentation sous forme de chaîne de la valeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-145\">The default behavior of the `ToString` method for an enumeration value is to return the string representation of the value.</span></span>    \n\n<span data-ttu-id=\"1f359-146\">Dans la sortie de cet exemple, la date est trop précise (le prix des aubergines ne change pas chaque seconde) et la valeur du prix n’indique pas la devise locale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-146\">In the output from this example, the date is too precise (the price of eggplant doesn't change every second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"1f359-147\">À l’étape suivante, vous découvrirez comment résoudre ces problèmes en contrôlant le format des représentations sous forme de chaînes des résultats des expressions.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-147\">In the next step, you'll learn how to fix those issues by controlling the format of string representations of the expression results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"1f359-148\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-148\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"1f359-149\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-149\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="1f359-150">Contrôler la mise en forme des expressions interpolées</span><span class="sxs-lookup"><span data-stu-id="1f359-150">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="1f359-151">À l’étape précédente, deux chaînes à la mise en forme incorrecte ont été insérées dans la chaîne de résultat.</span><span class="sxs-lookup"><span data-stu-id="1f359-151">In the previous step, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="1f359-152">L’une était une valeur de date et d’heure pour laquelle seule la date était appropriée.</span><span class="sxs-lookup"><span data-stu-id="1f359-152">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="1f359-153">La deuxième était un prix qui n’indiquait pas la devise locale.</span><span class="sxs-lookup"><span data-stu-id="1f359-153">The second was a price that didn't indicate its unit of currency.</span></span> <span data-ttu-id="1f359-154">Ces deux problèmes sont faciles à résoudre.</span><span class="sxs-lookup"><span data-stu-id="1f359-154">Both issues are easy to address.</span></span> <span data-ttu-id="1f359-155">En utilisant l’interpolation de chaîne, vous pouvez spécifier des *chaînes de format* qui contrôlent la mise en forme de types particuliers.</span><span class="sxs-lookup"><span data-stu-id="1f359-155">String interpolation lets you specify *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="1f359-156">Modifiez l’appel à `Console.WriteLine` de l’exemple précédent de façon à inclure les chaînes de format pour les expressions de date et de prix, comme indiqué dans la ligne de code suivante :</span><span class="sxs-lookup"><span data-stu-id="1f359-156">Modify the call to `Console.WriteLine` from the previous example to include the format strings for the date and price expressions as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item} was {price:C2} per {unit}.");

    ```


    <span data-ttu-id="1f359-157">Vous spécifiez une chaîne de format en plaçant après l’expression interpolée un signe deux-points (« : ») et la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="1f359-157">You specify a format string by following the interpolated expression with a colon (":") and the format string.</span></span> <span data-ttu-id="1f359-158">« d » est une [chaîne de format de date et d’heure standard](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) qui représente le format de date courte.</span><span class="sxs-lookup"><span data-stu-id="1f359-158">"d" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="1f359-159">« C2 » est une [chaîne de format numérique standard](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) qui représente un nombre sous forme de valeur monétaire avec deux chiffres après la virgule.</span><span class="sxs-lookup"><span data-stu-id="1f359-159">"C2" is a [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="1f359-160">Plusieurs types dans les bibliothèques .NET prennent en charge un ensemble prédéfini de chaînes de format.</span><span class="sxs-lookup"><span data-stu-id="1f359-160">A number of types in the .NET libraries support a predefined set of format strings.</span></span> <span data-ttu-id="1f359-161">Il s’agit notamment de tous les types numériques et des types de date et d’heure.</span><span class="sxs-lookup"><span data-stu-id="1f359-161">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="1f359-162">Pour obtenir une liste complète des types qui prennent en charge les chaînes de format, consultez [Chaînes de format et types de bibliothèque de classes .NET](../../standard/base-types/formatting-types.md#stringRef) dans l’article [Mise en forme des types dans .NET](../../standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1f359-162">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="1f359-163">Essayez de modifier les chaînes de format dans l’exemple pour voir comment elles impactent la mise en forme de la date et de l’heure ainsi que la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="1f359-163">Try modifying the format strings in the example to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="1f359-164">Remplacez le « d » dans `{date:d}` par « t » (pour afficher le format d’heure courte), « y » (pour afficher l’année et mois) et « yyyy » (pour afficher l’année sous forme de nombre à quatre chiffres).</span><span class="sxs-lookup"><span data-stu-id="1f359-164">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="1f359-165">Remplacez le « C2 » dans `{price:C2}` par « e » (pour la notation exponentielle) et « F3 » (pour une valeur numérique avec trois chiffres après la virgule).</span><span class="sxs-lookup"><span data-stu-id="1f359-165">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="1f359-166">En plus de contrôler la mise en forme, vous pouvez contrôler la largeur de champ et l’alignement des chaînes mises en forme qui sont incluses dans la chaîne de résultat.</span><span class="sxs-lookup"><span data-stu-id="1f359-166">In addition to controlling formatting, you can also control the field width and alignment of the formatted strings that are included in the result string.</span></span> <span data-ttu-id="1f359-167">À l’étape suivante, vous allez découvrir comment effectuer cette opération.</span><span class="sxs-lookup"><span data-stu-id="1f359-167">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="1f359-168">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="1f359-168">This online coding experience is in preview mode.</span></span> <span data-ttu-id="1f359-169">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="1f359-169">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="1f359-170">Contrôler la largeur de champ et l’alignement des expressions interpolées</span><span class="sxs-lookup"><span data-stu-id="1f359-170">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: >
    <span data-ttu-id="1f359-171">En règle générale, quand le résultat d’une expression interpolée est représenté sous forme de chaîne, la chaîne est incluse dans une chaîne de résultat sans espaces de début ou de fin.</span><span class="sxs-lookup"><span data-stu-id="1f359-171">Ordinarily, when the result of an interpolated expression is formatted to string, that string is included in a result string without leading or trailing spaces.</span></span> <span data-ttu-id="1f359-172">Contrôler la largeur d’un champ et l’alignement du texte vous permet de rendre une sortie plus lisible, en particulier quand vous utilisez un jeu de données.</span><span class="sxs-lookup"><span data-stu-id="1f359-172">Particularly when you work with a set of data, being able to control a field width and text alignment helps to produce a more readable output.</span></span> <span data-ttu-id="1f359-173">Pour observer cela, exécutez le code suivant :</span><span class="sxs-lookup"><span data-stu-id="1f359-173">To see this, run the following code:</span></span>


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    <span data-ttu-id="1f359-174">Les noms des éléments sont alignés à gauche, tandis que leurs quantités sont alignées à droite.</span><span class="sxs-lookup"><span data-stu-id="1f359-174">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id="1f359-175">Vous spécifiez l’alignement en ajoutant une virgule (« , ») après une expression interpolée et en spécifiant la largeur de champ *minimum*.</span><span class="sxs-lookup"><span data-stu-id="1f359-175">You specify the alignment by adding a comma (",") after an interpolated expression and designating the *minimum* field width.</span></span> <span data-ttu-id="1f359-176">Si la valeur spécifiée est un nombre positif, le champ est aligné à droite.</span><span class="sxs-lookup"><span data-stu-id="1f359-176">If the specified value is a positive number, the field is right-aligned.</span></span> <span data-ttu-id="1f359-177">Si c’est un nombre négatif, le champ est aligné à gauche.</span><span class="sxs-lookup"><span data-stu-id="1f359-177">If it is a negative number, the field is left-aligned.</span></span>


    <span data-ttu-id="1f359-178">Essayez de supprimer les signes négatifs du code `{"Item",-25}` et `{item.Key,-25}`, puis réexécutez l’exemple.</span><span class="sxs-lookup"><span data-stu-id="1f359-178">Try removing the negative signs from the `{"Item",-25}` and `{item.Key,-25}` code and run the example again.</span></span> <span data-ttu-id="1f359-179">Cette fois, les noms d’élément sont alignés à droite.</span><span class="sxs-lookup"><span data-stu-id="1f359-179">This time, the item names are right-aligned.</span></span>


    <span data-ttu-id="1f359-180">Vous pouvez combiner un spécificateur d’alignement et une chaîne de format pour une même expression interpolée.</span><span class="sxs-lookup"><span data-stu-id="1f359-180">You can combine an alignment specifier and a format string for a single interpolated expression.</span></span> <span data-ttu-id="1f359-181">Pour cela, spécifiez d’abord l’alignement, puis un signe deux-points et la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="1f359-181">To do that, specify the alignment first, followed by a colon and the format string.</span></span> <span data-ttu-id="1f359-182">Essayez d’exécuter le code suivant qui affiche trois chaînes mises en forme avec des largeurs de champs définies :</span><span class="sxs-lookup"><span data-stu-id="1f359-182">Try the following code that displays three formatted strings with defined field widths:</span></span>


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```


    > [!NOTE]

    > <span data-ttu-id="1f359-183">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="1f359-183">This online coding experience is in preview mode.</span></span> <span data-ttu-id="1f359-184">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="1f359-184">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: "<span data-ttu-id=\"1f359-185\">Vous avez terminé le guide de démarrage rapide sur l’interpolation de chaîne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-185\">You've completed the string interpolation quickstart.</span></span> \n\n<span data-ttu-id=\"1f359-186\">Vous pouvez poursuivre ces guides de démarrage rapide dans votre propre environnement de développement local.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-186\">You can continue these quickstarts in your own local development environment.</span></span> <span data-ttu-id=\"1f359-187\">Découvrez les principes fondamentaux du [développement local](local-environment.md), puis choisissez un guide de démarrage rapide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-187\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"1f359-188\">Vous pouvez suivre ce même guide de démarrage, passer directement au guide de démarrage rapide suivant ou recommencer le guide de démarrage rapide [Nombres en C#](numbers-in-csharp-local.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-188\">You can try this same quickstart, move directly to the next quickstart, or start again with the [Numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"1f359-189\">Pour plus d’informations, consultez la rubrique [Interpolation de chaîne](../language-reference/tokens/interpolated.md) et le tutoriel [Interpolation de chaîne en C#](../tutorials/string-interpolation.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1f359-189\">For more information, see the [String interpolation](../language-reference/tokens/interpolated.md) topic and the [String interpolation in C#](../tutorials/string-interpolation.md) tutorial.</span></span>"
