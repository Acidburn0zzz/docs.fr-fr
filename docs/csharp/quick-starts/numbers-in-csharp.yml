### YamlMime:Tutorial
title: <span data-ttu-id="b1e78-101">Nombres en C#</span><span class="sxs-lookup"><span data-stu-id="b1e78-101">Numbers in C#</span></span>
metadata:
  title: Didacticiel interactif sur les nombres en C# - Guides de démarrage rapide en C#
  description: Dans ce guide de démarrage rapide sur les types numériques, vous allez utiliser votre navigateur pour découvrir C# de manière interactive. Vous allez écrire un code C# et afficher les résultats de la compilation et de l’exécution du code directement dans le navigateur.
  audience: Developer
  ms.topic: quickstart
  ms.custom: mvc
  level: Beginner
  nextTutorialHref: branches-and-loops.yml
  nextTutorialTitle: <span data-ttu-id="b1e78-105">Branches et boucles en C#</span><span class="sxs-lookup"><span data-stu-id="b1e78-105">Branches and loops in C#</span></span>
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: f772109fe1066726f8ced1a4d41375a25ef49425
  ms.sourcegitcommit: 15109844229ade1c6449f48f3834db1b26907824
  ms.translationtype: HT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 05/07/2018
  ms.locfileid: "33807770"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="b1e78-106">Ce guide de démarrage rapide vous fait découvrir les types nombre en C# de manière interactive en utilisant votre navigateur pour écrire du code C# et afficher les résultats de la compilation et de l’exécution du code.</span><span class="sxs-lookup"><span data-stu-id="b1e78-106">This quick start teaches you about the number types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="b1e78-107">Il contient une série de leçons pour explorer les nombres et les opérations mathématiques en C#.</span><span class="sxs-lookup"><span data-stu-id="b1e78-107">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id="b1e78-108">Ces leçons présentent les concepts de base du langage C#.</span><span class="sxs-lookup"><span data-stu-id="b1e78-108">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="b1e78-109">Explorer les mathématiques avec des entiers</span><span class="sxs-lookup"><span data-stu-id="b1e78-109">Explore integer math</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"b1e78-110\">Exécutez le code suivant dans la fenêtre interactive.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"b1e78-111\">Pour ce faire, tapez le bloc de code suivant dans la fenêtre interactive et cliquez sur le bouton **Exécuter** :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"b1e78-112\">Vous venez d’observer l’une des opérations mathématiques de base avec des entiers.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-112\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"b1e78-113\">Le type `int` représente un **entier**, qui peut être positif ou négatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-113\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"b1e78-114\">Vous utilisez le symbole `+` pour effectuer une addition.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-114\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"b1e78-115\">Les autres opérations mathématiques courantes avec des entiers sont les suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-115\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"b1e78-116\">`-` pour la soustraction</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-116\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"b1e78-117\">`*` pour la multiplication</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-117\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"b1e78-118\">`/` pour la division</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-118\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"b1e78-119\">Ce guide de démarrage rapide vous permet d’explorer son contenu à votre rythme en modifiant le code que vous avez écrit dans la fenêtre interactive.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-119\">Throughout this quick start, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"b1e78-120\">Il fournit des exemples que vous pouvez mettre en pratique à chaque étape.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-120\">This quick start provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"b1e78-121\">Commencez par explorer ces différentes opérations.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-121\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"b1e78-122\">Modifiez la troisième ligne pour tester chacune de ces opérations.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-122\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"b1e78-123\">Après chaque modification, cliquez sur le bouton **Exécuter**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-123\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"b1e78-124\">Soustraction :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-124\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"b1e78-125\">Multiplication :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-125\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"b1e78-126\">Division :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-126\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"b1e78-127\">Vous pouvez également, si vous le souhaitez, effectuer des essais en réalisant plusieurs opérations mathématiques dans la même ligne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-127\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"b1e78-128\">Durant votre exploration de C# (ou de tout autre langage de programmation), vous commettrez des erreurs d’écriture du code.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"b1e78-129\">Le **compilateur** détectera ces erreurs et vous les signalera.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"b1e78-130\">Si la sortie contient des messages d’erreur, vérifiez attentivement l’exemple de code ainsi que le code dans la fenêtre interactive pour identifier les corrections à apporter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"b1e78-131\">Cet exercice vous aidera à mieux comprendre la structure du code C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-131\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"b1e78-132\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-132\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b1e78-133\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-133\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="b1e78-134">Explorer l’ordre des opérations</span><span class="sxs-lookup"><span data-stu-id="b1e78-134">Explore order of operations</span></span>
  durationInMinutes: 7
  content: >
    <span data-ttu-id="b1e78-135">Le langage C# définit la priorité des différentes opérations mathématiques avec à l’aide de règles cohérentes avec les règles mathématiques que vous avez apprises.</span><span class="sxs-lookup"><span data-stu-id="b1e78-135">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>

    <span data-ttu-id="b1e78-136">La multiplication et la division ont priorité sur l’addition et la soustraction.</span><span class="sxs-lookup"><span data-stu-id="b1e78-136">Multiplication and division take precedence over addition and subtraction.</span></span>

    <span data-ttu-id="b1e78-137">Explorez cet ordre de priorité en exécutant le code suivant dans la fenêtre interactive :</span><span class="sxs-lookup"><span data-stu-id="b1e78-137">Explore that by running the following code in the interactive window:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = a + b * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="b1e78-138">La sortie montre que la multiplication est effectuée avant l’addition.</span><span class="sxs-lookup"><span data-stu-id="b1e78-138">The output demonstrates that the multiplication is performed before the addition.</span></span>


    <span data-ttu-id="b1e78-139">Vous pouvez appliquer un ordre de calcul différent en mettant entre parenthèses la ou les opérations à exécuter en premier :</span><span class="sxs-lookup"><span data-stu-id="b1e78-139">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>


    ```csharp

    int a = 5;

    int b = 4;

    int c = 2;

    int d = (a  + b) * c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="b1e78-140">Pratiquez en combinant plusieurs opérations différentes.</span><span class="sxs-lookup"><span data-stu-id="b1e78-140">Explore more by combining many different operations.</span></span> <span data-ttu-id="b1e78-141">Remplacez la quatrième ligne ci-dessus par un contenu similaire à ce qui suit :</span><span class="sxs-lookup"><span data-stu-id="b1e78-141">Replace the fourth line above with something like this:</span></span>


    ```csharp

    int d = (a + b) - 6 * c + (12 * 4) / 3 + 12;

    ```


    <span data-ttu-id="b1e78-142">Vous avez peut-être observé un comportement intéressant des entiers.</span><span class="sxs-lookup"><span data-stu-id="b1e78-142">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id="b1e78-143">La division d’entiers produit toujours un résultat entier, même quand vous pensez que le résultat devrait inclure une partie décimale ou fractionnaire.</span><span class="sxs-lookup"><span data-stu-id="b1e78-143">Integer division always produces an integer result, even when you'd expect the result to include a decimal or fractional portion.</span></span>


    <span data-ttu-id="b1e78-144">Si vous n’avez pas observé ce comportement, essayez ce qui suit :</span><span class="sxs-lookup"><span data-stu-id="b1e78-144">If you haven't seen this behavior, try the following:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    Console.WriteLine(d);

    ```


    <span data-ttu-id="b1e78-145">Cliquez de nouveau sur **Exécuter** pour afficher les résultats.</span><span class="sxs-lookup"><span data-stu-id="b1e78-145">Click **Run** again to see the results.</span></span>


    > [!NOTE]

    > <span data-ttu-id="b1e78-146">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="b1e78-146">This online coding experience is in preview mode.</span></span> <span data-ttu-id="b1e78-147">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="b1e78-147">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="b1e78-148">Explorer la précision et les limites des entiers</span><span class="sxs-lookup"><span data-stu-id="b1e78-148">Explore integer precision and limits</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="b1e78-149">Ce dernier exemple a montré que la division d’entiers tronque le résultat.</span><span class="sxs-lookup"><span data-stu-id="b1e78-149">That last sample showed you that integer division truncates the result.</span></span>

    <span data-ttu-id="b1e78-150">Vous pouvez obtenir le **reste** à l’aide de l’opérateur **modulo**, à savoir le caractère `%` :</span><span class="sxs-lookup"><span data-stu-id="b1e78-150">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>


    ```csharp

    int a = 7;

    int b = 4;

    int c = 3;

    int d = (a  + b) / c;

    int e = (a + b) % c;

    Console.WriteLine($"quotient: {d}");

    Console.WriteLine($"remainder: {e}");

    ```


    <span data-ttu-id="b1e78-151">Le type d’entier C# diffère des entiers mathématiques d’une autre manière : le type `int` a des limites minimale et maximale.</span><span class="sxs-lookup"><span data-stu-id="b1e78-151">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id="b1e78-152">Exécutez ce code dans la fenêtre interactive pour afficher ces limites :</span><span class="sxs-lookup"><span data-stu-id="b1e78-152">Run this code in the interactive window to see those limits:</span></span>


    ```csharp

    int max = int.MaxValue;

    int min = int.MinValue;

    Console.WriteLine($"The range of integers is {min} to {max}");

    ```


    <span data-ttu-id="b1e78-153">Si un calcul produit une valeur qui dépasse ces limites, vous obtenez une condition de **dépassement négatif** ou **dépassement positif**.</span><span class="sxs-lookup"><span data-stu-id="b1e78-153">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id="b1e78-154">La réponse affichée indique la plage (d’une limite à l’autre).</span><span class="sxs-lookup"><span data-stu-id="b1e78-154">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id="b1e78-155">Ajoutez ces deux lignes dans la fenêtre interactive pour afficher un exemple :</span><span class="sxs-lookup"><span data-stu-id="b1e78-155">Add these two lines to the interactive window to see an example:</span></span>


    ```csharp

    int what = max + 3;

    Console.WriteLine($"An example of overflow: {what}");

    ```


    <span data-ttu-id="b1e78-156">Notez que la réponse est très proche de l’entier minimal (négatif).</span><span class="sxs-lookup"><span data-stu-id="b1e78-156">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id="b1e78-157">Il en est de même pour `min + 2`.</span><span class="sxs-lookup"><span data-stu-id="b1e78-157">It's the same as `min + 2`.</span></span> <span data-ttu-id="b1e78-158">L’addition a produit un **dépassement négatif** des valeurs autorisées pour les entiers.</span><span class="sxs-lookup"><span data-stu-id="b1e78-158">The addition operation **overflowed** the allowed values for integers.</span></span>

    <span data-ttu-id="b1e78-159">La réponse est un très grand nombre négatif, car un dépassement négatif « inclut » de la plus grande valeur d’entier possible à la plus petite.</span><span class="sxs-lookup"><span data-stu-id="b1e78-159">The answer is a very large negative number because an overflow "wraps around" from the largest possible integer value to the smallest.</span></span>


    <span data-ttu-id="b1e78-160">Il existe d’autres types numériques avec une précision et des limites différentes que vous pouvez utiliser quand le type `int` ne répond pas à vos besoins.</span><span class="sxs-lookup"><span data-stu-id="b1e78-160">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id="b1e78-161">Nous les explorerons à l’étape suivante.</span><span class="sxs-lookup"><span data-stu-id="b1e78-161">Let's explore those next.</span></span>


    > [!NOTE]

    > <span data-ttu-id="b1e78-162">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="b1e78-162">This online coding experience is in preview mode.</span></span> <span data-ttu-id="b1e78-163">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="b1e78-163">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="b1e78-164">Utiliser le type double</span><span class="sxs-lookup"><span data-stu-id="b1e78-164">Work with the double type</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"b1e78-165\">Le type numérique `double` représente un nombre à virgule flottante double précision.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-165\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"b1e78-166\">Ces termes vous sont peut-être inconnus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-166\">Those terms may be new to you.</span></span> <span data-ttu-id=\"b1e78-167\">Un nombre **à virgule flottante** est utile pour représenter de très grands ou petits nombres non intégraux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-167\">A **floating point** number is useful to represent non-integral numbers that may be very large or small in magnitude.</span></span> <span data-ttu-id=\"b1e78-168\">La **double précision** signifie que ces nombres sont stockés avec une précision supérieure à la **simple précision**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-168\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"b1e78-169\">Sur les ordinateurs modernes, les nombres double précision sont généralement plus utilisés que les nombres simple précision.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-169\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"b1e78-170\">Explorons ce type double.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-170\">Let's explore.</span></span> <span data-ttu-id=\"b1e78-171\">Exécutez le code suivant dans la fenêtre interactive et observez le résultat :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-171\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"b1e78-172\">Notez que la réponse inclut la partie décimale du quotient.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-172\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"b1e78-173\">Essayez avec une expression légèrement plus complexe utilisant des doubles :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-173\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"b1e78-174\">La plage d’une valeur double est nettement supérieure à celle de valeurs entières.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-174\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"b1e78-175\">Exécutez le code suivant dans la fenêtre interactive :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-175\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine($\"The range of double is {min} to {max}\");\n```\n\n<span data-ttu-id=\"b1e78-176\">Ces valeurs s’affichent sous forme de notation scientifique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-176\">These values are printed out in scientific notation.</span></span> <span data-ttu-id=\"b1e78-177\">Le nombre à gauche du `E` est le nombre significatif.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-177\">The number to the left of the `E` is the significand.</span></span> <span data-ttu-id=\"b1e78-178\">Le nombre à droite est l’exposant, en puissance de 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-178\">The number to the right is the exponent, as a power of 10.</span></span> \n\n<span data-ttu-id=\"b1e78-179\">Tout comme les nombres décimaux en mathématiques, les doubles en C# peuvent présenter des erreurs d’arrondi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-179\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"b1e78-180\">Exécutez le code suivant :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-180\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"b1e78-181\">Vous savez que la valeur extensible `0.3` ne correspond pas exactement à `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-181\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"b1e78-182\">***Test***</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-182\">***Challenge***</span></span>\n\n<span data-ttu-id=\"b1e78-183\">Effectuez d’autres calculs avec des grands nombres, des petits nombres, des multiplications et des divisions à l’aide du type `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-183\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"b1e78-184\">Effectuez des calculs plus complexes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-184\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"b1e78-185\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-185\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b1e78-186\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-186\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="b1e78-187">Utiliser des types de virgule fixe</span><span class="sxs-lookup"><span data-stu-id="b1e78-187">Work with fixed point types</span></span>
  durationInMinutes: 8
  content: "<span data-ttu-id=\"b1e78-188\">Vous avez vu les types numériques de base en C#, à savoir les entiers et les doubles.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-188\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"b1e78-189\">Il existe un autre type à découvrir : le type `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-189\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"b1e78-190\">Le type `decimal` a une plage plus petite, mais une précision supérieure à celle du type `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-190\">The `decimal` type has a smaller range but greater precision than `double`.</span></span> <span data-ttu-id=\"b1e78-191\">Le terme **virgule fixe** signifie que la virgule décimale (ou virgule binaire) ne se déplace pas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-191\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"b1e78-192\">Étudions cela d’un peu plus près :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-192\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine($\"The range of the decimal type is {min} to {max}\");\n```\n\n<span data-ttu-id=\"b1e78-193\">Notez que la plage est plus petite que celle du type `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-193\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"b1e78-194\">Vous pouvez observer la plus haute précision du type décimal en exécutant le code suivant :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-194\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"b1e78-195\">Le suffixe `M` des nombres permet d’indiquer comment une constante doit utiliser le type `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-195\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"b1e78-196\">Notez que le calcul utilisant le type décimal a plus de chiffres à droite de la virgule décimale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-196\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"b1e78-197\">***Test***</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-197\">***Challenge***</span></span>\n\n<span data-ttu-id=\"b1e78-198\">Maintenant que vous avez vu les différents types numériques, écrivez du code qui calcule la surface d’un cercle avec un rayon de 2,5 centimètres.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-198\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 centimeters.</span></span> <span data-ttu-id=\"b1e78-199\">Rappelez-vous que la surface d’un cercle est le rayon au carré multiplié par PI.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-199\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"b1e78-200\">Conseil : .NET contient une constante pour PI, à savoir <xref:System.Math.PI?displayProperty=nameWithType>, que vous pouvez utiliser pour cette valeur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-200\">One hint: .NET contains a constant for PI, <xref:System.Math.PI?displayProperty=nameWithType> that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"b1e78-201\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-201\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"b1e78-202\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-202\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n\n<span data-ttu-id=\"b1e78-203\">Vous devriez obtenir une réponse comprise entre 19 et 20.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-203\">You should get an answer between 19 and 20.</span></span>\n"
- title: <span data-ttu-id="b1e78-204">Terminer le test</span><span class="sxs-lookup"><span data-stu-id="b1e78-204">Complete challenge</span></span>
  durationInMinutes: 1
  content: >
    <span data-ttu-id="b1e78-205">Avez-vous obtenu un résultat similaire à celui-ci ?</span><span class="sxs-lookup"><span data-stu-id="b1e78-205">Did you come up with something like this?</span></span>


    ```csharp

    double radius = 2.50;

    double area = Math.PI * radius * radius;

    Console.WriteLine(area);

    ```


    <span data-ttu-id="b1e78-206">Si vous le voulez, essayez d’autres formules.</span><span class="sxs-lookup"><span data-stu-id="b1e78-206">Try some other formulas if you'd like.</span></span>


    > [!NOTE]

    > <span data-ttu-id="b1e78-207">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="b1e78-207">This online coding experience is in preview mode.</span></span> <span data-ttu-id="b1e78-208">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="b1e78-208">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: "<span data-ttu-id=\"b1e78-209\">Vous avez terminé le guide de démarrage rapide « Nombres en C# ».</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-209\">You've completed the \"Numbers in C#\" quick start.</span></span> \n\n<span data-ttu-id=\"b1e78-210\">Vous pouvez poursuivre ces guides de démarrage rapide dans votre propre environnement de développement.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-210\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"b1e78-211\">Découvrez les principes fondamentaux du [développement local](local-environment.md) puis choisissez un guide de démarrage rapide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-211\">Learn the basics of [local development](local-environment.md) and then pick a quick start.</span></span> <span data-ttu-id=\"b1e78-212\">Vous pouvez essayer ce même exercice, passer directement au guide de démarrage rapide suivant, ou recommencer à partir du guide de démarrage rapide sur les [nombres en C#](numbers-in-csharp-local.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-212\">You can try this same exercise, move directly to the next quick start, or start again at with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"b1e78-213\">Pour en savoir plus sur les nombres en C#, consultez les rubriques suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-213\">You can learn more about numbers in C# in the following topics:</span></span>\n\n<span data-ttu-id=\"b1e78-214\">[Tableau des types intégraux](../language-reference/keywords/integral-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-214\">[Integral Types Table](../language-reference/keywords/integral-types-table.md) </span></span>  \n<span data-ttu-id=\"b1e78-215\">[Tableau des types virgule flottante](../language-reference/keywords/floating-point-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-215\">[Floating-Point Types Table](../language-reference/keywords/floating-point-types-table.md) </span></span>  \n<span data-ttu-id=\"b1e78-216\">[Tableau des types intégrés](../language-reference/keywords/built-in-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-216\">[Built-In Types Table](../language-reference/keywords/built-in-types-table.md) </span></span>  \n<span data-ttu-id=\"b1e78-217\">[Tableau des conversions numériques implicites](../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-217\">[Implicit Numeric Conversions Table](../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  \n[<span data-ttu-id=\"b1e78-218\">Tableau des conversions numériques explicites</span><span class=\"sxs-lookup\"><span data-stu-id=\"b1e78-218\">Explicit Numeric Conversions Table</span></span>](../language-reference/keywords/explicit-numeric-conversions-table.md)\n"
