documentType: Tutorial
title: <span data-ttu-id="345e2-101">Branches et boucles</span><span class="sxs-lookup"><span data-stu-id="345e2-101">Branches and loops</span></span>
metadata:
  title: Branches et boucles
  description: "Dans ce guide de démarrage rapide sur les branches et des boucles, vous utiliserez votre navigateur pour en savoir plus c# interactive. Vous allez écrire du code c# et afficher les résultats de la compilation et exécution de votre code directement dans le navigateur."
  audience: Developer
  level: Beginner
  ms.custom: mvc
  displayType: two-column
  interactive: csharp
  nextTutorialHref: arrays-and-collections
  nextTutorialTitle: <span data-ttu-id="345e2-105">Tableaux et collections en c#</span><span class="sxs-lookup"><span data-stu-id="345e2-105">Arrays and collections in C#</span></span>
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"345e2-106\">Ce guide de démarrage rapide vous apprend comment écrire du code qui examine les variables et modifie le chemin d’accès de l’exécution en fonction de ces variables.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-106\">This quick start teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id=\"345e2-107\">Vous utiliserez votre navigateur pour écrire c# interactive et afficher les résultats de la compilation et exécution de votre code.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-107\">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"345e2-108\">Ce guide de démarrage rapide contient une série de leçons qui explorent la création de branche et de constructions de boucle dans c#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-108\">This quick start contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id=\"345e2-109\">Ces leçons présentent les concepts de base du langage C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-109\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
  ms.openlocfilehash: d86203d6e95f82f9db355b087e9abc669ffffac8
  ms.sourcegitcommit: 43c656811dd38a66a6672084c65d10c0cbbf2015
  ms.translationtype: HT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/22/2017
- title: "<span data-ttu-id=\"345e2-110\">Prendre des décisions à l’aide de l’instruction if</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-110\">Make decisions using the if statement</span></span>"
  durationInMinutes: 4
  content: "<span data-ttu-id=\"345e2-111\">Exécutez le code suivant dans la fenêtre interactive.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"345e2-112\">Pour ce faire, tapez le bloc de code suivant dans la fenêtre interactive et cliquez sur le bouton **Exécuter** :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"345e2-113\">Modifiez la déclaration de `b` pour que la somme soit inférieure à 10 :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"345e2-114\">Cliquez de nouveau sur le bouton **Exécuter**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"345e2-115\">La réponse étant inférieure à 10, rien ne s’affiche.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"345e2-116\">La **condition** que vous testez a une valeur false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"345e2-117\">Vous n’avez pas de code à exécuter, car vous avez uniquement écrit l’une des branches possibles pour une instruction `if` : la branche true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"345e2-118\">Durant votre exploration de C# (ou de tout autre langage de programmation), vous commettrez des erreurs d’écriture du code.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"345e2-119\">Le **compilateur** détectera ces erreurs et vous les signalera.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"345e2-120\">Si la sortie contient des messages d’erreur, vérifiez attentivement l’exemple de code ainsi que le code dans la fenêtre interactive pour identifier les corrections à apporter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"345e2-121\">Cet exercice vous aidera à mieux comprendre la structure du code C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"345e2-122\">Le premier exemple montre la puissance de l’instruction `if` et des types booléens.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"345e2-123\">Un *booléen* est une variable qui peut avoir l’une des deux valeurs suivantes : `true` ou `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"345e2-124\">C# définit un type spécial, `bool`, pour les variables booléennes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"345e2-125\">L’instruction `if` vérifie la valeur d’un `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"345e2-126\">Quand la valeur est `true`, l’instruction qui suit `if` s’exécute.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"345e2-127\">Dans le cas contraire, elle est ignorée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"345e2-128\">Ce processus de vérification des conditions et d’exécution des instructions en fonction de ces conditions est très performant.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"345e2-129\">Poursuivons notre exploration.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"345e2-130\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"345e2-131\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="345e2-132">Utiliser if et else ensemble</span><span class="sxs-lookup"><span data-stu-id="345e2-132">Make if and else work together</span></span>
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"345e2-133\">Pour exécuter un code différent dans les branches true et false, vous créez une branche `else` qui s’exécute quand la condition a une valeur false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"345e2-134\">Écrivez ce code :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"345e2-135\">L’instruction qui suit le mot clé `else` s’exécute uniquement quand la condition testée a une valeur `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"345e2-136\">La combinaison de `if` et `else` avec des conditions booléennes offre les hautes performances dont vous avez besoin.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"345e2-137\">La mise en retrait sous les instructions `if` et `else` a simplement pour but de faciliter la lecture.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"345e2-138\">Le langage C# ne considère pas la mise en retrait ou les espaces blancs comme des éléments significatifs.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-138\">The C# language doesn't treat indentation or whitespace as significant.</span></span> <span data-ttu-id=\"345e2-139\">L’instruction qui suit le mot clé `if` ou `else` sera exécutée en fonction de la condition.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"345e2-140\">Tous les exemples dans ce démarrage rapide suivent une pratique courante pour mettre en retrait les lignes selon le flux de contrôle d’instructions.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-140\">All the samples in this quick start follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"345e2-141\">Étant donné que la mise en retrait n’est pas significative, vous devez utiliser `{` et `}` pour indiquer quand vous souhaitez inclure plus d’une instruction dans le bloc qui s’exécute de manière conditionnelle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"345e2-142\">Les programmeurs C# utilisent généralement les accolades pour toutes les clauses `if` et `else`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"345e2-143\">L’exemple suivant est identique à ce que vous venez de créer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"345e2-144\">Testez le code.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"345e2-145\">Le reste de ce guide de démarrage rapide, tous les exemples de code incluent les accolades suivant accepté pratiques.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-145\">Through the rest of this quick start, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"345e2-146\">Vous pouvez tester des conditions plus complexes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"345e2-147\">`&&` représente « et ».</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"345e2-148\">Cela signifie que les deux conditions doivent être true pour que l’instruction s’exécute dans la branche true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"345e2-149\">Ces exemples montrent également que vous pouvez avoir plusieurs instructions dans chaque branche conditionnelle, à condition de les mettre entre `{` et `}`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"345e2-150\">Vous pouvez également utiliser `||` pour représenter « ou » :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"345e2-151\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"345e2-152\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"345e2-153\">Utiliser des boucles pour répéter des opérations</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-153\">Use loops to repeat operations</span></span>"
  durationInMinutes: 6
  content: "<span data-ttu-id=\"345e2-154\">Un autre concept important pour créer des programmes plus volumineux est celui des **boucles**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"345e2-155\">Vous allez utiliser des boucles pour répéter des instructions que vous souhaitez exécuter plusieurs fois.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"345e2-156\">Exécutez le code suivant dans la fenêtre interactive :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"345e2-157\">L’instruction `while` vérifie une condition et exécute l’instruction qui suit `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"345e2-158\">Elle répète la vérification de la condition et l’exécution de ces instructions jusqu'à ce que la condition soit false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"345e2-159\">Cet exemple contient un nouvel opérateur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"345e2-160\">`++` après la variable `counter` est l’opérateur d’**incrémentation**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"345e2-161\">Il ajoute 1 à la valeur de compteur et stocke cette valeur dans la variable de compteur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"345e2-162\">Assurez-vous que la condition de boucle `while` ne devienne pas false quand vous exécutez le code.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"345e2-163\">Dans le cas contraire, vous allez créer une **boucle infinie** dans laquelle votre programme ne se terminera jamais.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"345e2-164\">Nous n’allons pas le démontrer ici, car le moteur qui exécute votre code expirerait et votre programme n’afficherait aucune sortie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"345e2-165\">La boucle `while` teste la condition avant d’exécuter le code qui suit `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"345e2-166\">La boucle `do` ... `while` exécute d’abord le code, puis vérifie la condition.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"345e2-167\">Elle ressemble à ce qui suit :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"345e2-168\">Cette boucle `do` et la boucle antérieure `while` fonctionnent de manière identique.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"345e2-169\">Passons maintenant à une dernière instruction de boucle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"345e2-170\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"345e2-171\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="345e2-172">Utiliser la boucle for</span><span class="sxs-lookup"><span data-stu-id="345e2-172">Work with the for loop</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"345e2-173\">Une autre instruction de boucle commune présente dans le code C# est la boucle `for`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"345e2-174\">Exécutez le code suivant dans la fenêtre interactive :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"345e2-175\">Cette boucle fonctionne de manière identique à la boucle `while` et la boucle `do` que vous avez déjà utilisées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"345e2-176\">L’instruction `for` comprend trois parties qui contrôlent son fonctionnement.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"345e2-177\">La première partie est l’**initialiseur for** : `for counter = 0;` déclare que `counter` est la variable de boucle et définit sa valeur initiale sur `0`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"345e2-178\">La partie centrale est la **condition for** : `counter < 10` déclare que cette boucle `for` continue à s’exécuter tant que la valeur de compteur est inférieure à 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"345e2-179\">La dernière partie est l’**itérateur for** : `counter++` indique comment modifier la variable de boucle après l’exécution du bloc qui suit l’instruction `for`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"345e2-180\">Il spécifie ici que `counter` doit être incrémenté de 1 chaque fois que le bloc s’exécute.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"345e2-181\">Vérifiez-le par vous-même.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"345e2-182\">Réalisez les essais suivants :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"345e2-183\">Modifiez l’initialiseur pour définir le démarrage à une valeur différente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"345e2-184\">Modifiez la condition pour définir l’arrêt à une valeur différente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"345e2-185\">Une fois terminé, vous allez vous-même écrire des codes pour mettre en pratique ce que vous avez appris.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"345e2-186\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"345e2-187\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="345e2-188">Combiner des branches et des boucles</span><span class="sxs-lookup"><span data-stu-id="345e2-188">Combine branches and loops</span></span>
  durationInMinutes: 12
  content: "<span data-ttu-id=\"345e2-189\">Maintenant que vous avez vu l’instruction `if` et la création de boucles en langage C#, vérifiez si vous pouvez écrire un code C# pour obtenir la somme de tous les entiers de 1 à 20 divisibles par 3.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-189\">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id=\"345e2-190\">Voici quelques conseils :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-190\">Here are a few hints:</span></span>\n\n- <span data-ttu-id=\"345e2-191\">L’opérateur `%` vous donne le reste d’une opération de division.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-191\">The `%` operator gives you the remainder of a division operation.</span></span>\n- <span data-ttu-id=\"345e2-192\">L’instruction `if` vous donne la condition pour vérifier si un nombre doit être inclus dans la somme.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-192\">The `if` statement givesx you the condition to see if a number should be part of the sum.</span></span>\n- <span data-ttu-id=\"345e2-193\">La boucle `for` peut vous aider à répéter une série d’étapes pour tous les nombres de 1 à 20.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-193\">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>\n\n<span data-ttu-id=\"345e2-194\">Essayez par vous-même</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-194\">Try it yourself.</span></span> <span data-ttu-id=\"345e2-195\">et vérifiez le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-195\">Then check how you did.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"345e2-196\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-196\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"345e2-197\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-197\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="345e2-198">Terminer le test</span><span class="sxs-lookup"><span data-stu-id="345e2-198">Complete challenge</span></span>
  durationInMinutes: 1
  content: "<span data-ttu-id=\"345e2-199\">Vous avez terminé le démarrage rapide de « branches et effectue une boucle ».</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-199\">You've completed the \"branches and loops\" quick start.</span></span> \n\n<span data-ttu-id=\"345e2-200\">Vous pouvez continuer ces Démarrages rapides sur votre propre environnement de développement.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-200\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"345e2-201\">La rubrique .NET [prise en main de 10 minutes](https://www.microsoft.com/net/core) a des instructions pour configurer votre environnement de développement local.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-201\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"345e2-202\">Ensuite, continuez [démarrage rapide de collection liste](arrays-and-collections.md) dans votre environnement local.</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-202\">Once you've done that, continue with [List collection quickstart](arrays-and-collections.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"345e2-203\">Pour en savoir plus sur ces concepts, consultez les rubriques suivantes :</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-203\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"345e2-204\">[Instruction if et else](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-204\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"345e2-205\">[Instruction while](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-205\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"345e2-206\">[Instruction do](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-206\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"345e2-207\">Instruction for</span><span class=\"sxs-lookup\"><span data-stu-id=\"345e2-207\">For statement</span></span>](../language-reference/keywords/for.md)   \n"
